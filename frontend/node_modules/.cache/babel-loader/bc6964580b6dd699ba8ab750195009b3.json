{"ast":null,"code":"var _jsxFileName = \"/Users/RomanDrozdov/Documents/praktikum/react-mesto-auth/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card(props) {\n  _s();\n\n  const currentUser = React.useContext(CurrentUserContext);\n  const isOwn = props.owner === currentUser._id; // Определяем, являемся ли мы владельцем текущей карточки\n\n  const cardDeleteButtonClassName = `card__delete ${isOwn ? 'card__delete' : 'card__delete_none'}` // Создаём переменную, которую после зададим в `className` для кнопки удаления\n  ;\n  const isLiked = props.likes.some(i => i === currentUser._id); // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n\n  const cardLikeButtonClassName = `card__like ${isLiked ? 'card__like_active' : ''}`; // Создаём переменную, которую после зададим в `className` для кнопки лайка\n\n  function handleClick() {\n    props.onCardClick(props);\n  }\n\n  function handleLikeClick() {\n    props.onCardLike(props);\n  }\n\n  function handleDeleteClick() {\n    props.onCardDelete(props);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `${cardDeleteButtonClassName} hover`,\n        onClick: handleDeleteClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.link,\n        className: \"card__img\",\n        alt: props.name,\n        onClick: handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card__description\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card__text\",\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: cardLikeButtonClassName,\n            onClick: handleLikeClick,\n            \"aria-label\": \"\\u041D\\u0440\\u0430\\u0432\\u0438\\u0442\\u0441\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card__like_number\",\n            children: props.likes.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, props.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Card, \"fR8wccA8kuOmI8tLX/QG90sBSlk=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/RomanDrozdov/Documents/praktikum/react-mesto-auth/src/components/Card.js"],"names":["React","CurrentUserContext","Card","props","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","handleClick","onCardClick","handleLikeClick","onCardLike","handleDeleteClick","onCardDelete","link","name","length","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,gCAAnC;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAEjB,QAAMC,WAAW,GAAGJ,KAAK,CAACK,UAAN,CAAiBJ,kBAAjB,CAApB;AAEA,QAAMK,KAAK,GAAGH,KAAK,CAACI,KAAN,KAAgBH,WAAW,CAACI,GAA1C,CAJiB,CAI8B;;AAE/C,QAAMC,yBAAyB,GAC1B,gBAAeH,KAAK,GAAG,cAAH,GAAoB,mBAAoB,EADlC,CACoC;AADnE;AAIA,QAAMI,OAAO,GAAGP,KAAK,CAACQ,KAAN,CAAYC,IAAZ,CAAiBC,CAAC,IAAIA,CAAC,KAAKT,WAAW,CAACI,GAAxC,CAAhB,CAViB,CAU6C;;AAC9D,QAAMM,uBAAuB,GAAI,cAAaJ,OAAO,GAAG,mBAAH,GAAyB,EAAG,EAAjF,CAXiB,CAWmE;;AAEpF,WAASK,WAAT,GAAuB;AACnBZ,IAAAA,KAAK,CAACa,WAAN,CAAkBb,KAAlB;AACH;;AAED,WAASc,eAAT,GAA2B;AACvBd,IAAAA,KAAK,CAACe,UAAN,CAAiBf,KAAjB;AACH;;AAED,WAASgB,iBAAT,GAA6B;AACzBhB,IAAAA,KAAK,CAACiB,YAAN,CAAmBjB,KAAnB;AACH;;AAED,sBACI;AAAoB,IAAA,SAAS,EAAC,MAA9B;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAG,GAAEM,yBAA0B,QAA9D;AAAuE,QAAA,OAAO,EAAEU;AAAhF;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,GAAG,EAAEhB,KAAK,CAACkB,IAAhB;AAAsB,QAAA,SAAS,EAAC,WAAhC;AAA4C,QAAA,GAAG,EAAElB,KAAK,CAACmB,IAAvD;AAA6D,QAAA,OAAO,EAAEP;AAAtE;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBAA4BZ,KAAK,CAACmB;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,EAAf;AAAA,kCACI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAER,uBAAjC;AAA0D,YAAA,OAAO,EAAEG,eAAnE;AAAoF,0BAAW;AAA/F;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAG,YAAA,SAAS,EAAC,mBAAb;AAAA,sBAAkCd,KAAK,CAACQ,KAAN,CAAYY;AAA9C;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,KAAUpB,KAAK,CAACqB,EAAhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAxCQtB,I;;KAAAA,I;AA0CT,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Card(props) {\n\n    const currentUser = React.useContext(CurrentUserContext);\n\n    const isOwn = props.owner === currentUser._id; // Определяем, являемся ли мы владельцем текущей карточки\n    \n    const cardDeleteButtonClassName = (\n        `card__delete ${isOwn ? 'card__delete' : 'card__delete_none'}` // Создаём переменную, которую после зададим в `className` для кнопки удаления\n    );\n\n    const isLiked = props.likes.some(i => i === currentUser._id); // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n    const cardLikeButtonClassName = `card__like ${isLiked ? 'card__like_active' : ''}`; // Создаём переменную, которую после зададим в `className` для кнопки лайка\n\n    function handleClick() {\n        props.onCardClick(props);\n    }\n\n    function handleLikeClick() {\n        props.onCardLike(props);\n    }\n\n    function handleDeleteClick() {\n        props.onCardDelete(props);\n    }\n\n    return (\n        <div key={props.id} className=\"card\">\n            <div className=\"card\">\n                <button type=\"button\" className={`${cardDeleteButtonClassName} hover`} onClick={handleDeleteClick}></button>\n                <img src={props.link} className=\"card__img\" alt={props.name} onClick={handleClick} />\n                <div className=\"card__description\">\n                    <h2 className=\"card__text\">{props.name}</h2>\n                    <div className=\"\">\n                        <button type=\"button\" className={cardLikeButtonClassName} onClick={handleLikeClick} aria-label=\"Нравится\"></button>\n                        <p className=\"card__like_number\">{props.likes.length}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;"]},"metadata":{},"sourceType":"module"}