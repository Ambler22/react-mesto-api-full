{"ast":null,"code":"export var BASE_URL='https://auth.nomoreparties.co';export var register=function register(email,password){return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email:email,password:password})});};export var authorize=function authorize(email,password){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:'POST',headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email:email,password:password})}).then(function(res){return res.json();}).then(function(data){if(data.token){localStorage.setItem('jwt',data.token);return data.token;}}).catch(function(err){return console.log(err);});};export var getContent=function getContent(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:'GET',headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(token)}}).then(function(res){return res.json();}).then(function(data){return data;});};","map":{"version":3,"sources":["/Users/RomanDrozdov/Documents/praktikum/react-mesto-auth/src/components/auth.js"],"names":["BASE_URL","register","email","password","fetch","method","headers","body","JSON","stringify","authorize","then","res","json","data","token","localStorage","setItem","catch","err","console","log","getContent"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,QAAQ,CAAG,+BAAjB,CAEP,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAQC,QAAR,CAAqB,CACzC,MAAOC,CAAAA,KAAK,WAAIJ,QAAJ,YAAuB,CAC/BK,MAAM,CAAE,MADuB,CAE/BC,OAAO,CAAE,CACL,eAAgB,kBADX,CAFsB,CAK/BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACP,KAAK,CAALA,KAAD,CAAQC,QAAQ,CAARA,QAAR,CAAf,CALyB,CAAvB,CAAZ,CAOH,CARM,CAUP,MAAO,IAAMO,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACR,KAAD,CAAQC,QAAR,CAAqB,CAC1C,MAAOC,CAAAA,KAAK,WAAIJ,QAAJ,YAAuB,CAC/BK,MAAM,CAAE,MADuB,CAE/BC,OAAO,CAAE,CACL,eAAgB,kBADX,CAFsB,CAK/BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACP,KAAK,CAALA,KAAD,CAAQC,QAAQ,CAARA,QAAR,CAAf,CALyB,CAAvB,CAAL,CAONQ,IAPM,CAOA,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EAPH,EAQNF,IARM,CAQD,SAACG,IAAD,CAAU,CACZ,GAAGA,IAAI,CAACC,KAAR,CAAe,CACXC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAA4BH,IAAI,CAACC,KAAjC,EACA,MAAOD,CAAAA,IAAI,CAACC,KAAZ,CACH,CACJ,CAbM,EAcNG,KAdM,CAcA,SAAAC,GAAG,QAAIC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ,EAdH,CAAP,CAeH,CAhBM,CAkBP,MAAO,IAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACP,KAAD,CAAW,CACjC,MAAOX,CAAAA,KAAK,WAAIJ,QAAJ,cAAyB,CACjCK,MAAM,CAAE,KADyB,CAEjCC,OAAO,CAAE,CACL,eAAgB,kBADX,CAEL,iCAA2BS,KAA3B,CAFK,CAFwB,CAAzB,CAAL,CAONJ,IAPM,CAOD,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EAPF,EAQNF,IARM,CAQD,SAAAG,IAAI,QAAIA,CAAAA,IAAJ,EARH,CAAP,CASD,CAVI","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport const register = (email, password) => {\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({email, password})\n    })\n}\n\nexport const authorize = (email, password) => {\n    return fetch(`${BASE_URL}/signin`, {\n        method: 'POST',\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({email, password})\n    })\n    .then((res => res.json()))\n    .then((data) => {\n        if(data.token) {\n            localStorage.setItem('jwt', data.token);\n            return data.token;\n        }\n    })\n    .catch(err => console.log(err))\n};\n\nexport const getContent = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n        method: 'GET',\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n      }\n    })\n    .then(res => res.json())\n    .then(data => data)\n  }"]},"metadata":{},"sourceType":"module"}