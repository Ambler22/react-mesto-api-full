{"ast":null,"code":"// export const BASE_URL = 'https://auth.nomoreparties.co';\nexport const BASE_URL = 'http://localhost:3001';\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => checkResponse(res));\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    credentials: 'include',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }) // .then((res => res.json()))\n  // .then((data) => {\n  //    if(data.token) {\n  //        localStorage.setItem('jwt', data.token);\n  //        return data.token;\n  //    }\n  //})\n  //.catch(err => console.log(err))\n  .then(res => checkResponse(res));\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    credentials: 'include',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  }) // .then(res => res.json())\n  // .then(data => data)\n  .then(res => checkResponse(res));\n};\n\nfunction checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n\n  return Promise.reject(`Ошибк: ${res.status}`);\n}","map":{"version":3,"sources":["/Users/RomanDrozdov/Documents/praktikum/react-mesto-auth/src/components/auth.js"],"names":["BASE_URL","register","email","password","fetch","method","credentials","headers","body","JSON","stringify","then","res","checkResponse","authorize","getContent","token","ok","json","Promise","reject","status"],"mappings":"AAAA;AAEA,OAAO,MAAMA,QAAQ,GAAG,uBAAjB;AAEP,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AAC/BK,IAAAA,MAAM,EAAE,MADuB;AAE/BC,IAAAA,WAAW,EAAE,SAFkB;AAG/BC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAHsB;AAM/BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACR,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAf;AANyB,GAAvB,CAAL,CAQNQ,IARM,CAQAC,GAAD,IAASC,aAAa,CAACD,GAAD,CARrB,CAAP;AASH,CAVM;AAYP,OAAO,MAAME,SAAS,GAAG,CAACZ,KAAD,EAAQC,QAAR,KAAqB;AAC1C,SAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AAC/BK,IAAAA,MAAM,EAAE,MADuB;AAE/BC,IAAAA,WAAW,EAAE,SAFkB;AAG/BC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAHsB;AAM/BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACR,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAf;AANyB,GAAvB,CAAL,CAQP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfO,GAgBNQ,IAhBM,CAgBAC,GAAD,IAASC,aAAa,CAACD,GAAD,CAhBrB,CAAP;AAiBH,CAlBM;AAoBP,OAAO,MAAMG,UAAU,GAAIC,KAAD,IAAW;AACjC,SAAOZ,KAAK,CAAE,GAAEJ,QAAS,WAAb,EAAyB;AACjCK,IAAAA,MAAM,EAAE,KADyB;AAEjCC,IAAAA,WAAW,EAAE,SAFoB;AAGjCC,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAEL,uBAAkB,UAASS,KAAM;AAF5B;AAHwB,GAAzB,CAAL,CAQP;AACA;AATO,GAUNL,IAVM,CAUAC,GAAD,IAASC,aAAa,CAACD,GAAD,CAVrB,CAAP;AAWD,CAZI;;AAcL,SAASC,aAAT,CAAuBD,GAAvB,EAA4B;AACxB,MAAIA,GAAG,CAACK,EAAR,EAAY;AACR,WAAOL,GAAG,CAACM,IAAJ,EAAP;AACH;;AACD,SAAOC,OAAO,CAACC,MAAR,CAAgB,UAASR,GAAG,CAACS,MAAO,EAApC,CAAP;AACH","sourcesContent":["// export const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport const BASE_URL = 'http://localhost:3001';\n\nexport const register = (email, password) => {\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({email, password})\n    })\n    .then((res) => checkResponse(res));\n}\n\nexport const authorize = (email, password) => {\n    return fetch(`${BASE_URL}/signin`, {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({email, password})\n    })\n    // .then((res => res.json()))\n    // .then((data) => {\n    //    if(data.token) {\n    //        localStorage.setItem('jwt', data.token);\n    //        return data.token;\n    //    }\n    //})\n    //.catch(err => console.log(err))\n    .then((res) => checkResponse(res));\n};\n\nexport const getContent = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n        method: 'GET',\n        credentials: 'include',\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n      }\n    })\n    // .then(res => res.json())\n    // .then(data => data)\n    .then((res) => checkResponse(res));\n  };\n\n  function checkResponse(res) {\n      if (res.ok) {\n          return res.json();\n      }\n      return Promise.reject(`Ошибк: ${res.status}`);\n  }"]},"metadata":{},"sourceType":"module"}