{"ast":null,"code":"var _jsxFileName = \"/Users/RomanDrozdov/Documents/praktikum/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddCardPopup from './AddPlacePopup';\nimport DeleteCardPopup from './DeleteCardPopup';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport Login from './Login';\nimport Register from \"./Register\";\nimport ProtectedRoute from './ProtectedRoute';\nimport * as auth from \"./auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const history = useHistory();\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [email, setEmail] = React.useState();\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getCards()]).then(([userData, cards]) => {\n      setCurrentUser(userData);\n      setCards(cards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  React.useEffect(() => {\n    const jwt = localStorage.getItem('jwt');\n\n    if (jwt) {\n      auth.getContent(jwt).then(res => {\n        console.log(res);\n\n        if (res) {\n          setIsLoggedIn(true);\n          setEmail(res.email);\n          history.push('/');\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, [isLoggedIn, history]);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard({\n      name: card.name,\n      link: card.link\n    });\n  }\n\n  function handleUpdateUser(user) {\n    api.setUserInfo(user).then(userData => {\n      setCurrentUser(userData);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleUpdateAvatar({\n    avatar\n  }) {\n    api.setUserAvatar(avatar).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleCardLike(props) {\n    const isLiked = props.likes.some(i => i._id === currentUser._id); // Снова проверяем, есть ли уже лайк на этой карточке\n\n    const changeLikeCardStatus = isLiked ? api.deleteLike(props._id) : api.setLike(props._id); //if-else для лайка\n\n    changeLikeCardStatus.then(newCard => {\n      // Отправляем запрос в API и получаем обновлённые данные карточки\n      setCards(state => state.map(c => c._id === props._id ? newCard : c));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleCardDelete(props) {\n    api.deleteCard(props._id).then(() => {\n      setCards(state => state.filter(c => c._id !== props._id)); //с помощью filter делаем копию массива без нашей карточки\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleAddPlaceSubmit(card) {\n    api.setCards(card).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({});\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/singin\",\n          children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/singup\",\n          children: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          puth: \"/\",\n          children: [\" \", isLoggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 34\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"singin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 57\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/\",\n          isLoggedIn: isLoggedIn,\n          component: Main,\n          onEditAvatar: handleEditAvatarClick,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onCardClick: handleCardClick,\n          cards: cards,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AddCardPopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DeleteCardPopup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 13\n  }, this);\n}\n\n_s(App, \"2K1lNY23hH5aBOVb1nH3iOuwIEQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/RomanDrozdov/Documents/praktikum/react-mesto-auth/src/components/App.js"],"names":["React","useState","Route","Switch","Redirect","useHistory","Header","Main","Footer","EditAvatarPopup","EditProfilePopup","AddCardPopup","DeleteCardPopup","ImagePopup","api","CurrentUserContext","Login","Register","ProtectedRoute","auth","App","history","currentUser","setCurrentUser","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","cards","setCards","isLoggedIn","setIsLoggedIn","email","setEmail","useEffect","Promise","all","getUserInfo","getCards","then","userData","catch","err","console","log","jwt","localStorage","getItem","getContent","res","push","handleEditProfileClick","handleEditAvatarClick","handleAddPlaceClick","handleCardClick","card","name","link","handleUpdateUser","user","setUserInfo","closeAllPopups","handleUpdateAvatar","avatar","setUserAvatar","data","handleCardLike","props","isLiked","likes","some","i","_id","changeLikeCardStatus","deleteLike","setLike","newCard","state","map","c","handleCardDelete","deleteCard","filter","handleAddPlaceSubmit"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\n\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddCardPopup from './AddPlacePopup';\nimport DeleteCardPopup from './DeleteCardPopup';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport Login from './Login';\nimport Register from \"./Register\";\nimport ProtectedRoute from './ProtectedRoute';\nimport * as auth from \"./auth\"\n\nfunction App() {\n\n    const history = useHistory();\n\n    const [currentUser, setCurrentUser] = React.useState({});\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n\n    const [selectedCard, setSelectedCard] = React.useState({});\n\n    const [cards, setCards] = React.useState([]);\n\n    const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n\n    const [email, setEmail] = React.useState();\n\n    React.useEffect(() => {\n        Promise.all([\n            api.getUserInfo(),\n            api.getCards(),\n        ])\n            .then(([userData, cards]) => {\n                setCurrentUser(userData);\n                setCards(cards)\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }, [])\n\n    React.useEffect(() => {\n        const jwt = localStorage.getItem('jwt');\n        if (jwt) {\n            auth.getContent(jwt)\n            .then((res) => {\n                console.log(res)\n                if (res) {\n                    setIsLoggedIn(true);\n                    setEmail(res.email);\n                    history.push('/');\n                }\n            })\n                .catch((err) => {\n                    console.log(err);\n                })\n        }\n    }, [isLoggedIn, history])\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard({ name: card.name, link: card.link });\n    }\n\n    function handleUpdateUser(user) {\n        api.setUserInfo(user)\n            .then((userData) => {\n                setCurrentUser(userData);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    function handleUpdateAvatar({ avatar }) {\n        api.setUserAvatar(avatar)\n            .then((data) => {\n                setCurrentUser(data);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    function handleCardLike(props) {\n        const isLiked = props.likes.some(i => i._id === currentUser._id); // Снова проверяем, есть ли уже лайк на этой карточке\n        const changeLikeCardStatus = isLiked ? api.deleteLike(props._id) : api.setLike(props._id) //if-else для лайка\n        changeLikeCardStatus.then((newCard) => { // Отправляем запрос в API и получаем обновлённые данные карточки\n            setCards((state) => state.map((c) => c._id === props._id ? newCard : c));\n        })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    function handleCardDelete(props) {\n        api.deleteCard(props._id).then(() => {\n            setCards((state) => state.filter((c) => c._id !== props._id)); //с помощью filter делаем копию массива без нашей карточки\n        })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    function handleAddPlaceSubmit(card) {\n        api.setCards(card)\n            .then((newCard) => {\n                setCards([newCard, ...cards]);\n                closeAllPopups()\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    function closeAllPopups() {\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n\n        setSelectedCard({});\n    }\n\n    return (< CurrentUserContext.Provider value={currentUser} >\n        <div className=\"page\" >\n\n            <Header />\n\n            <Switch >\n                <Route path=\"/singin\">\n                    <Login />\n                </Route>\n\n                <Route path=\"/singup\" >\n                    <Register />\n                </Route>\n\n                <Route puth=\"/\"> {\n                    isLoggedIn ? < Redirect to=\"/\" /> : < Redirect to=\"singin\" />\n                } </Route>\n\n                <ProtectedRoute exact path=\"/\"\n                    isLoggedIn={isLoggedIn}\n                    component={Main}\n                    onEditAvatar={handleEditAvatarClick}\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    onCardClick={handleCardClick}\n\n                    cards={cards}\n                    onCardLike={handleCardLike}\n                    onCardDelete={handleCardDelete}\n                />\n            </Switch >\n\n            <Footer />\n\n            <EditProfilePopup isOpen={isEditProfilePopupOpen}\n                onClose={closeAllPopups}\n                onUpdateUser={handleUpdateUser}\n            />\n\n            <AddCardPopup isOpen={isAddPlacePopupOpen}\n                onClose={closeAllPopups}\n                onAddPlace={handleAddPlaceSubmit}\n            />\n\n            <ImagePopup card={selectedCard}\n                onClose={closeAllPopups}\n            />\n\n            <DeleteCardPopup />\n\n            <EditAvatarPopup isOpen={isEditAvatarPopupOpen}\n                onClose={closeAllPopups}\n                onUpdateAvatar={handleUpdateAvatar}\n            />\n\n        </div>\n    </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}