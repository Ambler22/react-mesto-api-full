{"ast":null,"code":"var _jsxFileName = \"/Users/RomanDrozdov/Documents/praktikum/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddCardPopup from './AddPlacePopup';\nimport DeleteCardPopup from './DeleteCardPopup';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [isLoggedIn, setIsLoggedIn] = React.useState(true);\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getCards()]).then(([userData, cards]) => {\n      setCurrentUser(userData);\n      setCards(cards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard({\n      name: card.name,\n      link: card.link\n    });\n  }\n\n  function handleUpdateUser(user) {\n    api.setUserInfo(user).then(userData => {\n      setCurrentUser(userData);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleUpdateAvatar({\n    avatar\n  }) {\n    api.setUserAvatar(avatar).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleCardLike(props) {\n    const isLiked = props.likes.some(i => i._id === currentUser._id); // Снова проверяем, есть ли уже лайк на этой карточке\n\n    const changeLikeCardStatus = isLiked ? api.deleteLike(props._id) : api.setLike(props._id); //if-else для лайка\n\n    changeLikeCardStatus.then(newCard => {\n      // Отправляем запрос в API и получаем обновлённые данные карточки\n      setCards(state => state.map(c => c._id === props._id ? newCard : c));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleCardDelete(props) {\n    api.deleteCard(props._id).then(() => {\n      setCards(state => state.filter(c => c._id !== props._id)); //с помощью filter делаем копию массива без нашей карточки\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleAddPlaceSubmit(card) {\n    api.setCards(card).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({});\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sing-in\",\n          children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sing-up\",\n          children: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/\",\n          isLoggedIn: isLoggedIn,\n          render: () => /*#__PURE__*/_jsxDEV(Main, {\n            onEditAvatar: handleEditAvatarClick,\n            onEditProfile: handleEditProfileClick,\n            onAddPlace: handleAddPlaceClick,\n            onCardClick: handleCardClick,\n            cards: cards,\n            onCardLike: handleCardLike,\n            onCardDelete: handleCardDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddCardPopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DeleteCardPopup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"wylIR55lRx1D4NzXYB1anbnjWtM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/RomanDrozdov/Documents/praktikum/react-mesto-auth/src/components/App.js"],"names":["React","Header","Main","Footer","EditAvatarPopup","EditProfilePopup","AddCardPopup","DeleteCardPopup","ImagePopup","api","CurrentUserContext","Route","Switch","Redirect","App","currentUser","setCurrentUser","useState","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","cards","setCards","isLoggedIn","setIsLoggedIn","useEffect","Promise","all","getUserInfo","getCards","then","userData","catch","err","console","log","handleEditProfileClick","handleEditAvatarClick","handleAddPlaceClick","handleCardClick","card","name","link","handleUpdateUser","user","setUserInfo","closeAllPopups","handleUpdateAvatar","avatar","setUserAvatar","data","handleCardLike","props","isLiked","likes","some","i","_id","changeLikeCardStatus","deleteLike","setLike","newCard","state","map","c","handleCardDelete","deleteCard","filter","handleAddPlaceSubmit"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddCardPopup from './AddPlacePopup';\nimport DeleteCardPopup from './DeleteCardPopup';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nfunction App() {\n\n    const [currentUser, setCurrentUser] = React.useState({});\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n\n    const [selectedCard, setSelectedCard] = React.useState({});\n\n    const [cards, setCards] = React.useState([]);\n\n    const [isLoggedIn, setIsLoggedIn] = React.useState(true);\n\n    React.useEffect(() => {\n        Promise.all([\n            api.getUserInfo(),\n            api.getCards(),\n        ])\n            .then(([userData, cards]) => {\n                setCurrentUser(userData);\n                setCards(cards)\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }, [])\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard({ name: card.name, link: card.link });\n    }\n\n    function handleUpdateUser(user) {\n        api.setUserInfo(user)\n            .then((userData) => {\n                setCurrentUser(userData);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    function handleUpdateAvatar({ avatar }) {\n        api.setUserAvatar(avatar)\n            .then((data) => {\n                setCurrentUser(data);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    function handleCardLike(props) {\n        const isLiked = props.likes.some(i => i._id === currentUser._id); // Снова проверяем, есть ли уже лайк на этой карточке\n        const changeLikeCardStatus = isLiked ? api.deleteLike(props._id) : api.setLike(props._id) //if-else для лайка\n        changeLikeCardStatus.then((newCard) => { // Отправляем запрос в API и получаем обновлённые данные карточки\n            setCards((state) => state.map((c) => c._id === props._id ? newCard : c));\n        })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    function handleCardDelete(props) {\n        api.deleteCard(props._id).then(() => {\n            setCards((state) => state.filter((c) => c._id !== props._id)); //с помощью filter делаем копию массива без нашей карточки\n        })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    function handleAddPlaceSubmit(card) {\n        api.setCards(card)\n            .then((newCard) => {\n                setCards([newCard, ...cards]);\n                closeAllPopups()\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    function closeAllPopups() {\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n\n        setSelectedCard({});\n    }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"page\">\n\n                <Header />\n\n                <Switch>\n                    <Route path=\"/sing-in\">\n                        <Login />\n                    </Route>\n\n                    <Route path=\"/sing-up\">\n                        <Register />\n                    </Route>\n\n                    <ProtectedRoute\n                        exact path=\"/\"\n                        isLoggedIn={isLoggedIn}\n\n                        render={() =>\n                            <Main\n                                onEditAvatar={handleEditAvatarClick}\n                                onEditProfile={handleEditProfileClick}\n                                onAddPlace={handleAddPlaceClick}\n                                onCardClick={handleCardClick}\n\n                                cards={cards}\n                                onCardLike={handleCardLike}\n                                onCardDelete={handleCardDelete}\n                            />\n                        }\n                    />\n                </Switch>\n\n                <Footer />\n\n                <EditProfilePopup\n                    isOpen={isEditProfilePopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateUser={handleUpdateUser}\n                />\n\n                <AddCardPopup\n                    isOpen={isAddPlacePopupOpen}\n                    onClose={closeAllPopups}\n                    onAddPlace={handleAddPlaceSubmit}\n                />\n\n                <ImagePopup\n                    card={selectedCard}\n                    onClose={closeAllPopups}\n                />\n\n                <DeleteCardPopup />\n\n                <EditAvatarPopup\n                    isOpen={isEditAvatarPopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateAvatar={handleUpdateAvatar}\n                />\n\n            </div>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}