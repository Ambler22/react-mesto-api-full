{"ast":null,"code":"var _jsxFileName = \"/Users/RomanDrozdov/Documents/praktikum/mesto-react/src/components/EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditProfilePopup(props) {\n  _s();\n\n  const currentUser = React.useContext(CurrentUserContext);\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n\n  function handleChangeName(e) {\n    setName(e.target.value);\n  }\n\n  function handleChangeDescription(e) {\n    setDescription(e.target.value);\n  } // После загрузки текущего пользователя из API\n  // его данные будут использованы в управляемых компонентах.\n\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onUpdateUser({\n      // Передаём значения управляемых компонентов во внешний обработчик\n      name,\n      about: description\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"profile\",\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    buttonText: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    isOpen: props.isOpen,\n    onClose: props.onClose,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: `${props.name}name`,\n      type: \"text\",\n      name: \"name\",\n      className: \"form-container__input\",\n      value: \"\",\n      required: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0438\\u043C\\u044F\",\n      tabIndex: \"1\",\n      minLength: \"2\",\n      maxLength: \"40\",\n      placeholder: \"\\u0418\\u043C\\u044F\",\n      value: name,\n      onChange: handleChangeName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"form-container__input-error\",\n      id: `${props.name}name-error`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: `${props.name}description`,\n      type: \"text\",\n      name: \"description\",\n      className: \"form-container__input\",\n      value: \"\",\n      required: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\",\n      tabIndex: \"2\",\n      minLength: \"2\",\n      maxLength: \"200\",\n      placeholder: \"\\u0417\\u0430\\u043D\\u044F\\u0442\\u0438\\u0435\",\n      value: description,\n      onChange: handleChangeDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"form-container__input-error\",\n      id: `${props.name}description-error`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditProfilePopup, \"G9LFWAI8ElI4DbM9ImILh8MVnsM=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["/Users/RomanDrozdov/Documents/praktikum/mesto-react/src/components/EditProfilePopup.js"],"names":["React","PopupWithForm","CurrentUserContext","EditProfilePopup","props","currentUser","useContext","name","setName","useState","description","setDescription","handleChangeName","e","target","value","handleChangeDescription","useEffect","about","handleSubmit","preventDefault","onUpdateUser","isOpen","onClose"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction EditProfilePopup(props) {\n\n    const currentUser = React.useContext(CurrentUserContext);\n    const [name, setName] = React.useState('');\n    const [description, setDescription] = React.useState('');\n\n    function handleChangeName(e) {\n        setName(e.target.value);\n    }\n\n    function handleChangeDescription(e) {\n        setDescription(e.target.value);\n    }\n\n    // После загрузки текущего пользователя из API\n    // его данные будут использованы в управляемых компонентах.\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser]);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n      \n        props.onUpdateUser({ // Передаём значения управляемых компонентов во внешний обработчик\n          name,\n          about: description,\n        });\n      }\n\n    return (\n        <PopupWithForm\n            name='profile'\n            title='Редактировать профиль'\n            buttonText='Сохранить'\n\n            isOpen={props.isOpen}\n            onClose={props.onClose}\n            onSubmit={handleSubmit}\n        >\n            <input id={`${props.name}name`} type=\"text\" name=\"name\" className=\"form-container__input\" value=\"\"\n                required=\"Введите имя\" tabIndex=\"1\" minLength=\"2\" maxLength=\"40\" placeholder=\"Имя\" value={name} onChange={handleChangeName} />\n            <span className=\"form-container__input-error\" id={`${props.name}name-error`}></span>\n            <input id={`${props.name}description`} type=\"text\" name=\"description\" className=\"form-container__input\" value=\"\"\n                required=\"Введите описание\" tabIndex=\"2\" minLength=\"2\" maxLength=\"200\" placeholder=\"Занятие\" value={description} onChange={handleChangeDescription} />\n            <span className=\"form-container__input-error\" id={`${props.name}description-error`}></span>\n        </PopupWithForm>\n    )\n}\n\nexport default EditProfilePopup;"]},"metadata":{},"sourceType":"module"}