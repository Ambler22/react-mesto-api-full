{"ast":null,"code":"class Api {\n  constructor(config) {\n    this._checkToken = headers => {\n      const token = localStorage.getItem('jwt');\n\n      if (token) {\n        headers['authorization'] = `Bearer ${token}`;\n      }\n\n      return headers;\n    };\n\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    return res.json();\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      credentials: 'include',\n      headers: this._checkToken(this._headers)\n    }).then(res => this._getResponseData(res));\n  }\n\n  getCards() {\n    return fetch(`${this._url}/cards`, {\n      credentials: 'include',\n      headers: this._checkToken(this._headers)\n    }).then(res => this._getResponseData(res));\n  }\n\n  setUserInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      credentials: 'include',\n      headers: this._checkToken(this._headers),\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(res => this._getResponseData(res));\n  }\n\n  setUserAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      credentials: 'include',\n      headers: this._checkToken(this._headers),\n      body: JSON.stringify({\n        avatar: data\n      })\n    }).then(res => this._getResponseData(res));\n  }\n\n  setCards(data) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: this._checkToken(this._headers),\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(res => this._getResponseData(res));\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      credentials: 'include',\n      headers: this._checkToken(this._headers)\n    }).then(res => this._getResponseData(res));\n  }\n\n  setLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      credentials: 'include',\n      headers: this._checkToken(this._headers)\n    }).then(res => this._getResponseData(res));\n  }\n\n  deleteLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      credentials: 'include',\n      headers: this._checkToken(this._headers)\n    }).then(res => this._getResponseData(res));\n  }\n\n}\n\nconst api = new Api({\n  // url: 'https://nomoreparties.co/v1/cohort-26',\n  url: 'http://api.dom.rom.nomoredomains.xyz',\n  headers: {\n    // authorization: '071ec2e0-6b59-41c1-9439-d0b2ee95bfc8',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"sources":["/Users/RomanDrozdov/Documents/praktikum/react-mesto-auth/src/utils/api.js"],"names":["Api","constructor","config","_checkToken","headers","token","localStorage","getItem","_url","url","_headers","_getResponseData","res","ok","Promise","reject","status","json","getUserInfo","fetch","method","credentials","then","getCards","setUserInfo","data","body","JSON","stringify","name","about","setUserAvatar","avatar","setCards","link","deleteCard","cardId","setLike","deleteLike","api"],"mappings":"AAAA,MAAMA,GAAN,CAAU;AACNC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAAA,SAYxBC,WAZwB,GAYTC,OAAD,IAAa;AACvB,YAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAd;;AAEA,UAAIF,KAAJ,EAAW;AACPD,QAAAA,OAAO,CAAC,eAAD,CAAP,GAA4B,UAASC,KAAM,EAA3C;AACH;;AACD,aAAOD,OAAP;AACH,KAnBuB;;AAChB,SAAKI,IAAL,GAAYN,MAAM,CAACO,GAAnB;AACA,SAAKC,QAAL,GAAgBR,MAAM,CAACE,OAAvB;AACH;;AAELO,EAAAA,gBAAgB,CAACC,GAAD,EAAM;AAClB,QAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACT,aAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUH,GAAG,CAACI,MAAO,EAArC,CAAP;AACH;;AACD,WAAOJ,GAAG,CAACK,IAAJ,EAAP;AACH;;AAWDC,EAAAA,WAAW,GAAG;AACV,WAAOC,KAAK,CAAE,GAAE,KAAKX,IAAK,WAAd,EAA0B;AAClCY,MAAAA,MAAM,EAAE,KAD0B;AAElCC,MAAAA,WAAW,EAAE,SAFqB;AAGlCjB,MAAAA,OAAO,EAAE,KAAKD,WAAL,CAAiB,KAAKO,QAAtB;AAHyB,KAA1B,CAAL,CAKNY,IALM,CAKDV,GAAG,IAAI,KAAKD,gBAAL,CAAsBC,GAAtB,CALN,CAAP;AAMH;;AAEDW,EAAAA,QAAQ,GAAG;AACP,WAAOJ,KAAK,CAAE,GAAE,KAAKX,IAAK,QAAd,EAAuB;AAC/Ba,MAAAA,WAAW,EAAE,SADkB;AAE/BjB,MAAAA,OAAO,EAAE,KAAKD,WAAL,CAAiB,KAAKO,QAAtB;AAFsB,KAAvB,CAAL,CAINY,IAJM,CAIDV,GAAG,IAAI,KAAKD,gBAAL,CAAsBC,GAAtB,CAJN,CAAP;AAKH;;AAEDY,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,WAAON,KAAK,CAAE,GAAE,KAAKX,IAAK,WAAd,EAA0B;AAClCY,MAAAA,MAAM,EAAE,OAD0B;AAElCC,MAAAA,WAAW,EAAE,SAFqB;AAGlCjB,MAAAA,OAAO,EAAE,KAAKD,WAAL,CAAiB,KAAKO,QAAtB,CAHyB;AAIlCgB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,IAAI,EAAEJ,IAAI,CAACI,IADM;AAEjBC,QAAAA,KAAK,EAAEL,IAAI,CAACK;AAFK,OAAf;AAJ4B,KAA1B,CAAL,CASNR,IATM,CASDV,GAAG,IAAI,KAAKD,gBAAL,CAAsBC,GAAtB,CATN,CAAP;AAUH;;AAEDmB,EAAAA,aAAa,CAACN,IAAD,EAAO;AAChB,WAAON,KAAK,CAAE,GAAE,KAAKX,IAAK,kBAAd,EAAiC;AACzCY,MAAAA,MAAM,EAAE,OADiC;AAEzCC,MAAAA,WAAW,EAAE,SAF4B;AAGzCjB,MAAAA,OAAO,EAAE,KAAKD,WAAL,CAAiB,KAAKO,QAAtB,CAHgC;AAIzCgB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBI,QAAAA,MAAM,EAAEP;AADS,OAAf;AAJmC,KAAjC,CAAL,CAQNH,IARM,CAQDV,GAAG,IAAI,KAAKD,gBAAL,CAAsBC,GAAtB,CARN,CAAP;AASH;;AAEDqB,EAAAA,QAAQ,CAACR,IAAD,EAAO;AACX,WAAON,KAAK,CAAE,GAAE,KAAKX,IAAK,QAAd,EAAuB;AAC/BY,MAAAA,MAAM,EAAE,MADuB;AAE/BC,MAAAA,WAAW,EAAE,SAFkB;AAG/BjB,MAAAA,OAAO,EAAE,KAAKD,WAAL,CAAiB,KAAKO,QAAtB,CAHsB;AAI/BgB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,IAAI,EAAEJ,IAAI,CAACI,IADM;AAEjBK,QAAAA,IAAI,EAAET,IAAI,CAACS;AAFM,OAAf;AAJyB,KAAvB,CAAL,CASNZ,IATM,CASDV,GAAG,IAAI,KAAKD,gBAAL,CAAsBC,GAAtB,CATN,CAAP;AAUH;;AAEDuB,EAAAA,UAAU,CAACC,MAAD,EAAS;AACf,WAAOjB,KAAK,CAAE,GAAE,KAAKX,IAAK,UAAS4B,MAAO,EAA9B,EAAiC;AACzChB,MAAAA,MAAM,EAAE,QADiC;AAEzCC,MAAAA,WAAW,EAAE,SAF4B;AAGzCjB,MAAAA,OAAO,EAAE,KAAKD,WAAL,CAAiB,KAAKO,QAAtB;AAHgC,KAAjC,CAAL,CAKFY,IALE,CAKGV,GAAG,IAAI,KAAKD,gBAAL,CAAsBC,GAAtB,CALV,CAAP;AAMH;;AAEDyB,EAAAA,OAAO,CAACD,MAAD,EAAS;AACZ,WAAOjB,KAAK,CAAE,GAAE,KAAKX,IAAK,UAAS4B,MAAO,QAA9B,EAAuC;AAC/ChB,MAAAA,MAAM,EAAE,KADuC;AAE/CC,MAAAA,WAAW,EAAE,SAFkC;AAG/CjB,MAAAA,OAAO,EAAE,KAAKD,WAAL,CAAiB,KAAKO,QAAtB;AAHsC,KAAvC,CAAL,CAKNY,IALM,CAKDV,GAAG,IAAI,KAAKD,gBAAL,CAAsBC,GAAtB,CALN,CAAP;AAMH;;AAED0B,EAAAA,UAAU,CAACF,MAAD,EAAS;AACf,WAAOjB,KAAK,CAAE,GAAE,KAAKX,IAAK,UAAS4B,MAAO,QAA9B,EAAuC;AAC/ChB,MAAAA,MAAM,EAAE,QADuC;AAE/CC,MAAAA,WAAW,EAAE,SAFkC;AAG/CjB,MAAAA,OAAO,EAAE,KAAKD,WAAL,CAAiB,KAAKO,QAAtB;AAHsC,KAAvC,CAAL,CAKNY,IALM,CAKDV,GAAG,IAAI,KAAKD,gBAAL,CAAsBC,GAAtB,CALN,CAAP;AAMH;;AAtGS;;AA0GV,MAAM2B,GAAG,GAAG,IAAIvC,GAAJ,CAAS;AACjB;AACAS,EAAAA,GAAG,EAAE,sCAFY;AAGjBL,EAAAA,OAAO,EAAE;AACP;AACA,oBAAgB;AAFT;AAHQ,CAAT,CAAZ;AASA,eAAemC,GAAf","sourcesContent":["class Api {\n    constructor(config) {\n        this._url = config.url;\n        this._headers = config.headers;\n    }\n\n_getResponseData(res) {\n    if (!res.ok) {\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n}\n\n_checkToken = (headers) => {\n    const token = localStorage.getItem('jwt');\n\n    if (token) {\n        headers['authorization'] = `Bearer ${token}`;\n    }\n    return headers;\n}\n\ngetUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n        method: 'GET',\n        credentials: 'include',\n        headers: this._checkToken(this._headers),\n    })\n    .then(res => this._getResponseData(res));\n};\n\ngetCards() {\n    return fetch(`${this._url}/cards`, {\n        credentials: 'include',\n        headers: this._checkToken(this._headers),\n    })\n    .then(res => this._getResponseData(res));\n};\n\nsetUserInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n        method: 'PATCH',\n        credentials: 'include',\n        headers: this._checkToken(this._headers),\n        body: JSON.stringify({\n            name: data.name,\n            about: data.about,\n        })\n    })\n    .then(res => this._getResponseData(res));\n}\n\nsetUserAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n        method: 'PATCH',\n        credentials: 'include',\n        headers: this._checkToken(this._headers),\n        body: JSON.stringify({\n            avatar: data,\n        })\n    })\n    .then(res => this._getResponseData(res));\n}\n\nsetCards(data) {\n    return fetch(`${this._url}/cards`, {\n        method: 'POST',\n        credentials: 'include',\n        headers: this._checkToken(this._headers),\n        body: JSON.stringify({\n            name: data.name,\n            link: data.link,\n        })\n    })\n    .then(res => this._getResponseData(res));\n}\n\ndeleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n        method: 'DELETE',\n        credentials: 'include',\n        headers: this._checkToken(this._headers),\n        })\n        .then(res => this._getResponseData(res));\n}\n\nsetLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n        method: 'PUT',\n        credentials: 'include',\n        headers: this._checkToken(this._headers),\n    })\n    .then(res => this._getResponseData(res));\n}\n\ndeleteLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n        method: 'DELETE',\n        credentials: 'include',\n        headers: this._checkToken(this._headers),\n    })\n    .then(res => this._getResponseData(res));\n}\n\n}\n\nconst api = new Api ({\n    // url: 'https://nomoreparties.co/v1/cohort-26',\n    url: 'http://api.dom.rom.nomoredomains.xyz',\n    headers: {\n      // authorization: '071ec2e0-6b59-41c1-9439-d0b2ee95bfc8',\n      'Content-Type': 'application/json'\n    }\n});\n\nexport default api;"]},"metadata":{},"sourceType":"module"}