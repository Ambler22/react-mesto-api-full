{"ast":null,"code":"class Api {\n  constructor(config) {\n    this.url = config.url;\n    this.headers = config.headers;\n  }\n\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    return res.json();\n  }\n\n  getUserInfo() {\n    return fetch(`${this.url}/users/me`, {\n      headers: this.headers\n    }).then(res => this._getResponseData(res));\n  }\n\n  getCards() {\n    return fetch(`${this.url}/cards`, {\n      headers: this.headers\n    }).then(res => this._getResponseData(res));\n  }\n\n  setUserInfo(data) {\n    return fetch(`${this.url}/users/me`, {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(res => this._getResponseData(res));\n  }\n\n  setUserAvatar(data) {\n    return fetch(`${this.url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: data\n      })\n    }).then(res => this._getResponseData(res));\n  }\n\n  setCards(data) {\n    return fetch(`${this.url}/cards`, {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(res => this._getResponseData(res));\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this.url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this.headers\n    }).then(res => this._getResponseData(res));\n  }\n\n  setLike(cardId) {\n    return fetch(`${this.url}/cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: this.headers\n    }).then(res => this._getResponseData(res));\n  }\n\n  deleteLike(cardId) {\n    return fetch(`${this.url}/cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: this.headers\n    }).then(res => this._getResponseData(res));\n  }\n\n}\n\nconst api = new Api({\n  url: 'https://nomoreparties.co/v1/cohort-26',\n  headers: {\n    authorization: '071ec2e0-6b59-41c1-9439-d0b2ee95bfc8',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"sources":["/Users/RomanDrozdov/Documents/praktikum/react-mesto-auth/src/utils/api.js"],"names":["Api","constructor","config","url","headers","_getResponseData","res","ok","Promise","reject","status","json","getUserInfo","fetch","then","getCards","setUserInfo","data","method","body","JSON","stringify","name","about","setUserAvatar","avatar","setCards","link","deleteCard","cardId","setLike","deleteLike","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n    constructor(config) {\n        this.url = config.url;\n        this.headers = config.headers;\n    }\n\n_getResponseData(res) {\n    if (!res.ok) {\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n}\n\ngetUserInfo() {\n    return fetch(`${this.url}/users/me`, {\n        headers: this.headers,\n    })\n    .then(res => this._getResponseData(res));\n};\n\ngetCards() {\n    return fetch(`${this.url}/cards`, {\n        headers: this.headers,\n    })\n    .then(res => this._getResponseData(res));\n};\n\nsetUserInfo(data) {\n    return fetch(`${this.url}/users/me`, {\n        method: 'PATCH',\n        headers: this.headers,\n        body: JSON.stringify({\n            name: data.name,\n            about: data.about,\n        })\n    })\n    .then(res => this._getResponseData(res));\n}\n\nsetUserAvatar(data) {\n    return fetch(`${this.url}/users/me/avatar`, {\n        method: 'PATCH',\n        headers: this.headers,\n        body: JSON.stringify({\n            avatar: data,\n        })\n    })\n    .then(res => this._getResponseData(res));\n}\n\nsetCards(data) {\n    return fetch(`${this.url}/cards`, {\n        method: 'POST',\n        headers: this.headers,\n        body: JSON.stringify({\n            name: data.name,\n            link: data.link,\n        })\n    })\n    .then(res => this._getResponseData(res));\n}\n\ndeleteCard(cardId) {\n    return fetch(`${this.url}/cards/${cardId}`, {\n        method: 'DELETE',\n        headers: this.headers,\n        })\n        .then(res => this._getResponseData(res));\n}\n\nsetLike(cardId) {\n    return fetch(`${this.url}/cards/likes/${cardId}`, {\n        method: 'PUT',\n        headers: this.headers,\n    })\n    .then(res => this._getResponseData(res));\n}\n\ndeleteLike(cardId) {\n    return fetch(`${this.url}/cards/likes/${cardId}`, {\n        method: 'DELETE',\n        headers: this.headers,\n    })\n    .then(res => this._getResponseData(res));\n}\n\n}\n\nconst api = new Api ({\n    url: 'https://nomoreparties.co/v1/cohort-26',\n    headers: {\n      authorization: '071ec2e0-6b59-41c1-9439-d0b2ee95bfc8',\n      'Content-Type': 'application/json'\n    }\n});\n\nexport default api;"]},"metadata":{},"sourceType":"module"}