{"ast":null,"code":"var _jsxFileName = \"/Users/RomanDrozdov/Documents/praktikum/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddCardPopup from './AddCardPopup';\nimport DeleteCardPopup from './DeleteCardPopup';\nimport ImagePopup from './ImagePopup';\nimport { api } from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentUser, setCurrentUser] = React.useState('');\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  React.useEffect(() => {\n    api.getUserInfo().then(userData => {\n      console.log(userData);\n      setCurrentUser(userData);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard({\n      name: card.name,\n      link: card.link\n    });\n  }\n\n  function handleUpdateUser(name, about) {\n    api.setUserInfo(name, about).then(() => {\n      setCurrentUser(name, about);\n      setIsEditProfilePopupOpen(false);\n    });\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({});\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditAvatar: handleEditAvatarClick,\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onCardClick: handleCardClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddCardPopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DeleteCardPopup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"A38ZhMTuekigTfkY5lRK/zf54rE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/RomanDrozdov/Documents/praktikum/mesto-react/src/components/App.js"],"names":["React","Header","Main","Footer","EditAvatarPopup","EditProfilePopup","AddCardPopup","DeleteCardPopup","ImagePopup","api","CurrentUserContext","App","currentUser","setCurrentUser","useState","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","useEffect","getUserInfo","then","userData","console","log","catch","err","handleEditProfileClick","handleEditAvatarClick","handleAddPlaceClick","handleCardClick","card","name","link","handleUpdateUser","about","setUserInfo","closeAllPopups"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddCardPopup from './AddCardPopup';\nimport DeleteCardPopup from './DeleteCardPopup';\nimport ImagePopup from './ImagePopup';\nimport { api } from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction App() {\n\n    const [currentUser, setCurrentUser] = React.useState('');\n\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n\n    const [selectedCard, setSelectedCard] = React.useState({});\n\n    React.useEffect(() => {\n        api.getUserInfo()\n            .then((userData) => {\n                console.log(userData)\n                setCurrentUser(userData);\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }, [])\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard({ name: card.name, link: card.link });\n    }\n\n    function handleUpdateUser(name, about) {\n        api.setUserInfo(name, about)\n        .then(() => {\n            setCurrentUser(name, about);\n            setIsEditProfilePopupOpen(false);\n        })\n    }\n\n    function closeAllPopups() {\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n\n        setSelectedCard({});\n    }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"page\">\n\n                <Header />\n\n                <Main\n                    onEditAvatar={handleEditAvatarClick}\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    onCardClick={handleCardClick}\n                />\n\n                <Footer />\n\n                <EditProfilePopup\n                    isOpen={isEditProfilePopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateUser={handleUpdateUser}\n                />\n\n                <AddCardPopup\n                    isOpen={isAddPlacePopupOpen}\n                    onClose={closeAllPopups}\n                />\n\n                <ImagePopup\n                    card={selectedCard}\n                    onClose={closeAllPopups}\n                />\n\n                <DeleteCardPopup />\n\n                <EditAvatarPopup\n                    isOpen={isEditAvatarPopupOpen}\n                    onClose={closeAllPopups}\n                />\n\n            </div>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}