{"ast":null,"code":"var _jsxFileName = \"/Users/RomanDrozdov/Documents/praktikum/react-mesto-api-full/frontend/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddCardPopup from './AddPlacePopup';\nimport DeleteCardPopup from './DeleteCardPopup';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport Login from './Login';\nimport Register from \"./Register\";\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoTooltip from './InfoTooltip';\nimport { register, authorize, getContent } from \"./auth\";\nimport success from \"../images/success.svg\";\nimport fail from \"../images/fail.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log('123');\n\nfunction App() {\n  _s();\n\n  const history = useHistory();\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isNotifyPopupOpen, setIsNotifyPopupOpen] = React.useState(false);\n  const [notifyPopupInfo, setNotifyPopupInfo] = React.useState({});\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [valueEmail, setValueEmail] = React.useState('');\n  React.useEffect(() => {\n    console.log(isLoggedIn);\n\n    if (isLoggedIn === true) {\n      Promise.all([api.getUserInfo(), api.getCards()]).then(([userData, cards]) => {\n        console.log(userData);\n        console.log(cards);\n        setCurrentUser(userData);\n        setCards(cards);\n      }).catch(err => {});\n    }\n  }, [isLoggedIn]);\n  React.useEffect(() => {\n    const jwt = localStorage.getItem('jwt');\n\n    if (jwt) {\n      getContent(jwt).then(res => {\n        if (res) {\n          setValueEmail(res.data.email);\n        }\n\n        setIsLoggedIn(true);\n        history.push('/');\n      }).catch(err => {\n        // signOut();\n        console.log(err);\n      });\n    }\n  }, [history]);\n  React.useEffect(() => {\n    const closeByEscape = e => {\n      if (e.key === 'Escape') {\n        closeAllPopups();\n      }\n    };\n\n    document.addEventListener('keydown', closeByEscape);\n    return () => document.removeEventListener('keydown', closeByEscape);\n  }, []);\n\n  function registration(email, password) {\n    register(email, password).then(() => {\n      changeNotifyPopup({\n        path: success,\n        text: 'Вы успешно зарегистрировались!'\n      });\n      handleNotifyPopupOpen();\n    }).catch(err => {\n      changeNotifyPopup({\n        path: fail,\n        text: 'Что-то пошло не так! Попробуйте ещё раз.'\n      });\n      handleNotifyPopupOpen();\n      console.log(err);\n    });\n  }\n\n  function authorization(email, password) {\n    authorize(email, password).then(data => {\n      if (data.token) {\n        localStorage.setItem('jwt', data.token);\n      }\n\n      setValueEmail(email);\n      setIsLoggedIn(true);\n      history.push('/');\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function signOut() {\n    localStorage.removeItem('jwt');\n    history.push('/sign-in');\n    setIsLoggedIn(false);\n  }\n\n  function handleNotifyPopupOpen() {\n    setIsNotifyPopupOpen(true);\n  }\n\n  function changeNotifyPopup({\n    path,\n    text\n  }) {\n    setNotifyPopupInfo({\n      image: path,\n      title: text\n    });\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard({\n      name: card.name,\n      link: card.link\n    });\n  }\n\n  function handleUpdateUser(user) {\n    api.setUserInfo(user).then(userData => {\n      setCurrentUser(userData);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleUpdateAvatar({\n    avatar\n  }) {\n    api.setUserAvatar(avatar).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleCardLike(props) {\n    const isLiked = props.likes.some(i => i === currentUser._id); // Снова проверяем, есть ли уже лайк на этой карточке\n\n    const changeLikeCardStatus = isLiked ? api.deleteLike(props._id) : api.setLike(props._id); //if-else для лайка\n\n    changeLikeCardStatus.then(newCard => {\n      // Отправляем запрос в API и получаем обновлённые данные карточки\n      setCards(state => state.map(c => c._id === props._id ? newCard : c));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleCardDelete(props) {\n    api.deleteCard(props._id).then(() => {\n      setCards(state => state.filter(c => c._id !== props._id)); //с помощью filter делаем копию массива без нашей карточки\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleAddPlaceSubmit(card) {\n    api.setCards(card).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsNotifyPopupOpen(false);\n    setSelectedCard({});\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        email: valueEmail,\n        signOut: signOut\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/\",\n          isLoggedIn: isLoggedIn,\n          component: Main,\n          onEditAvatar: handleEditAvatarClick,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onCardClick: handleCardClick,\n          cards: cards,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-in\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            authorization: authorization\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            registration: registration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          children: [\" \", isLoggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 34\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"sign-in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 57\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AddCardPopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DeleteCardPopup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        isOpen: isNotifyPopupOpen,\n        onClose: closeAllPopups,\n        notifyPopupInfo: notifyPopupInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 13\n  }, this);\n}\n\n_s(App, \"eClUJ3brpyUeQNISM3yn4Pl+ITA=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/RomanDrozdov/Documents/praktikum/react-mesto-api-full/frontend/src/components/App.js"],"names":["React","Route","Switch","Redirect","useHistory","Header","Main","Footer","EditAvatarPopup","EditProfilePopup","AddCardPopup","DeleteCardPopup","ImagePopup","api","CurrentUserContext","Login","Register","ProtectedRoute","InfoTooltip","register","authorize","getContent","console","log","App","history","currentUser","setCurrentUser","useState","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isNotifyPopupOpen","setIsNotifyPopupOpen","notifyPopupInfo","setNotifyPopupInfo","selectedCard","setSelectedCard","cards","setCards","isLoggedIn","setIsLoggedIn","valueEmail","setValueEmail","useEffect","Promise","all","getUserInfo","getCards","then","userData","catch","err","jwt","localStorage","getItem","res","data","email","push","closeByEscape","e","key","closeAllPopups","document","addEventListener","removeEventListener","registration","password","changeNotifyPopup","path","success","text","handleNotifyPopupOpen","fail","authorization","token","setItem","signOut","removeItem","image","title","handleEditProfileClick","handleEditAvatarClick","handleAddPlaceClick","handleCardClick","card","name","link","handleUpdateUser","user","setUserInfo","handleUpdateAvatar","avatar","setUserAvatar","handleCardLike","props","isLiked","likes","some","i","_id","changeLikeCardStatus","deleteLike","setLike","newCard","state","map","c","handleCardDelete","deleteCard","filter","handleAddPlaceSubmit"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\n\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddCardPopup from './AddPlacePopup';\nimport DeleteCardPopup from './DeleteCardPopup';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport Login from './Login';\nimport Register from \"./Register\";\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoTooltip from './InfoTooltip';\nimport { register, authorize, getContent } from \"./auth\"\nimport success from '../images/success.svg';\nimport fail from '../images/fail.svg'\n\nconsole.log('123');\n\n\nfunction App() {\n\n    const history = useHistory();\n\n    const [currentUser, setCurrentUser] = React.useState({});\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isNotifyPopupOpen, setIsNotifyPopupOpen] = React.useState(false);\n    const [notifyPopupInfo, setNotifyPopupInfo] = React.useState({})\n\n    const [selectedCard, setSelectedCard] = React.useState({});\n    const [cards, setCards] = React.useState([]);\n\n    const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n\n    const [valueEmail, setValueEmail] = React.useState('');\n\n    React.useEffect(() => {\n        console.log(isLoggedIn);\n        if (isLoggedIn === true) {\n            Promise.all([\n                api.getUserInfo(),\n                api.getCards(),\n            ])\n                .then(([userData, cards]) => {\n                    console.log(userData)\n                    console.log(cards)\n                    setCurrentUser(userData);\n                    setCards(cards)\n                })\n                .catch((err) => {\n                })\n        }\n    }, [isLoggedIn])\n\n    React.useEffect(() => {\n        const jwt = localStorage.getItem('jwt');\n        if (jwt) {\n            getContent(jwt)\n                .then((res) => {\n                    if (res) {\n                        setValueEmail(res.data.email);\n                    }\n                    setIsLoggedIn(true);\n                    history.push('/');\n                })\n                .catch((err) => {\n                    // signOut();\n                    console.log(err);\n                })\n        }\n    }, [history])\n\n    React.useEffect(() => {\n        const closeByEscape = (e) => {\n          if (e.key === 'Escape') {\n            closeAllPopups();\n          }\n        }\n        document.addEventListener('keydown', closeByEscape)\n        return () => document.removeEventListener('keydown', closeByEscape)\n      }, [])\n\n    function registration(email, password) {\n        register(email, password)\n            .then(() => {\n                changeNotifyPopup({\n                    path: success,\n                    text: 'Вы успешно зарегистрировались!',\n                })\n                handleNotifyPopupOpen();\n            })\n            .catch((err) => {\n                changeNotifyPopup({\n                    path: fail,\n                    text: 'Что-то пошло не так! Попробуйте ещё раз.',\n                })\n                handleNotifyPopupOpen();\n                console.log(err);\n            })\n    }\n\n    function authorization(email, password) {\n        authorize(email, password)\n            .then((data) => {\n                if (data.token) {\n                    localStorage.setItem('jwt', data.token);\n                }\n                setValueEmail(email);\n                setIsLoggedIn(true);\n                history.push('/');\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    function signOut() {\n        localStorage.removeItem('jwt');\n        history.push('/sign-in');\n        setIsLoggedIn(false);\n\n    }\n\n    function handleNotifyPopupOpen() {\n        setIsNotifyPopupOpen(true);\n    }\n\n    function changeNotifyPopup({ path, text }) {\n        setNotifyPopupInfo({\n            image: path,\n            title: text,\n        })\n    }\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard({ name: card.name, link: card.link });\n    }\n\n    function handleUpdateUser(user) {\n        api.setUserInfo(user)\n            .then((userData) => {\n                setCurrentUser(userData);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    function handleUpdateAvatar({ avatar }) {\n        api.setUserAvatar(avatar)\n            .then((data) => {\n                setCurrentUser(data);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    function handleCardLike(props) {\n        const isLiked = props.likes.some(i => i === currentUser._id); // Снова проверяем, есть ли уже лайк на этой карточке\n        const changeLikeCardStatus = isLiked ? api.deleteLike(props._id) : api.setLike(props._id) //if-else для лайка\n        changeLikeCardStatus.then((newCard) => { // Отправляем запрос в API и получаем обновлённые данные карточки\n            setCards((state) => state.map((c) => c._id === props._id ? newCard : c));\n        })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    function handleCardDelete(props) {\n        api.deleteCard(props._id).then(() => {\n            setCards((state) => state.filter((c) => c._id !== props._id)); //с помощью filter делаем копию массива без нашей карточки\n        })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    function handleAddPlaceSubmit(card) {\n        api.setCards(card)\n            .then((newCard) => {\n                setCards([newCard, ...cards]);\n                closeAllPopups()\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    function closeAllPopups() {\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsNotifyPopupOpen(false);\n\n        setSelectedCard({});\n    }\n\n    return (< CurrentUserContext.Provider value={currentUser} >\n        <div className=\"page\" >\n\n            <Header\n                email={valueEmail}\n                signOut={signOut}\n            />\n\n            <Switch>\n\n                <ProtectedRoute\n                    exact path=\"/\"\n                    isLoggedIn={isLoggedIn}\n                    component={Main}\n                    onEditAvatar={handleEditAvatarClick}\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    onCardClick={handleCardClick}\n\n                    cards={cards}\n                    onCardLike={handleCardLike}\n                    onCardDelete={handleCardDelete}\n                />\n\n                <Route path=\"/sign-in\">\n                    <Login authorization={authorization} />\n                </Route>\n\n                <Route path=\"/sign-up\" >\n                    <Register registration={registration} />\n                </Route>\n\n                <Route path=\"/\"> {\n                    isLoggedIn ? < Redirect to=\"/\" /> : < Redirect to=\"sign-in\" />\n                } </Route>\n\n            </Switch >\n\n            <Footer />\n\n            <EditProfilePopup\n                isOpen={isEditProfilePopupOpen}\n                onClose={closeAllPopups}\n                onUpdateUser={handleUpdateUser}\n            />\n\n            <AddCardPopup\n                isOpen={isAddPlacePopupOpen}\n                onClose={closeAllPopups}\n                onAddPlace={handleAddPlaceSubmit}\n            />\n\n            <ImagePopup card={selectedCard}\n                onClose={closeAllPopups}\n            />\n\n            <DeleteCardPopup />\n\n            <EditAvatarPopup\n                isOpen={isEditAvatarPopupOpen}\n                onClose={closeAllPopups}\n                onUpdateAvatar={handleUpdateAvatar}\n            />\n\n            <InfoTooltip\n                isOpen={isNotifyPopupOpen}\n                onClose={closeAllPopups}\n                notifyPopupInfo={notifyPopupInfo}\n            />\n\n        </div>\n    </CurrentUserContext.Provider >\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}