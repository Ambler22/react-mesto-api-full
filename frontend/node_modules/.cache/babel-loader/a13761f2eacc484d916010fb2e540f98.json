{"ast":null,"code":"var _jsxFileName = \"/Users/RomanDrozdov/Documents/praktikum/mesto-react/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { api } from '../utils/Api.js';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(props) {\n  _s();\n\n  const userData = React.useContext(CurrentUserContext);\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    api.getCards().then(cards => {\n      setCards(cards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleCardLike(props) {\n    const isLiked = props.likes.some(i => i._id === userData._id); // Снова проверяем, есть ли уже лайк на этой карточке\n\n    const changeLikeCardStatus = isLiked ? api.deleteLike(props._id) : api.setLike(props._id); //if-else для лайка\n\n    changeLikeCardStatus.then(newCard => {\n      // Отправляем запрос в API и получаем обновлённые данные карточки\n      setCards(state => state.map(c => c._id === props._id ? newCard : c));\n    }); //добавить catch\n  }\n\n  function handleCardDelete(props) {\n    api.deleteCard(props._id).then(() => {\n      setCards(state => state.filter(c => c._id !== props._id)); //с помощью filter делаем копию массива без нашей карточки\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile page__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__avatar-icon\",\n          onClick: props.onEditAvatar,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: userData.avatar,\n            className: \"profile__avatar\",\n            alt: \"\\u0410\\u0432\\u0430\\u0442\\u0430\\u0440\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile__add\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"profile__name\",\n              children: userData.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"profile__edit hover\",\n              onClick: props.onEditProfile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile__jod\",\n            children: userData.about\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"profile__button hover\",\n        onClick: props.onAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"cards page__content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"cards page__content\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, { ...card,\n        onCardClick: props.onCardClick,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDelete\n      }, card._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"3w8SRYApF018L3mou9DOoP9MR+0=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/RomanDrozdov/Documents/praktikum/mesto-react/src/components/Main.js"],"names":["React","api","Card","CurrentUserContext","Main","props","userData","useContext","cards","setCards","useState","useEffect","getCards","then","catch","err","console","log","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","deleteLike","setLike","newCard","state","map","c","handleCardDelete","deleteCard","filter","onEditAvatar","avatar","name","onEditProfile","about","onAddPlace","card","onCardClick"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { api } from '../utils/Api.js';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Main(props) {\n\n    const userData = React.useContext(CurrentUserContext);\n\n    const [cards, setCards] = React.useState([]);\n\n    React.useEffect(() => {\n        api.getCards()\n            .then((cards) => {\n                setCards(cards)\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }, []);\n\n    function handleCardLike(props) {\n        const isLiked = props.likes.some(i => i._id === userData._id); // Снова проверяем, есть ли уже лайк на этой карточке\n        const changeLikeCardStatus = isLiked ? api.deleteLike(props._id) : api.setLike(props._id) //if-else для лайка\n        changeLikeCardStatus.then((newCard) => { // Отправляем запрос в API и получаем обновлённые данные карточки\n            setCards((state) => state.map((c) => c._id === props._id ? newCard : c));\n        }) //добавить catch\n    }\n\n    function handleCardDelete(props) {\n        api.deleteCard(props._id).then(() => {\n            setCards((state) => state.filter((c) => c._id !== props._id)); //с помощью filter делаем копию массива без нашей карточки\n        });\n    }\n\n\n    return (\n        <main>\n            <section className=\"profile page__content\">\n                <div className=\"profile__info\">\n                    <div className=\"profile__avatar-icon\" onClick={props.onEditAvatar}>\n                        <img src={userData.avatar} className=\"profile__avatar\" alt=\"Аватар\" />\n                    </div>\n                    <div className=\"profile__content\">\n                        <div className=\"profile__add\">\n                            <h1 className=\"profile__name\">{userData.name}</h1>\n                            <button type=\"button\" className=\"profile__edit hover\" onClick={props.onEditProfile}></button>\n                        </div>\n                        <p className=\"profile__jod\">{userData.about}</p>\n                    </div>\n                </div>\n                <button type=\"button\" className=\"profile__button hover\" onClick={props.onAddPlace}></button>\n            </section>\n            <section className=\"cards page__content\">\n            </section>\n\n            <section className=\"cards page__content\">\n                {cards.map((card) => (\n                    <Card\n                        key={card._id}\n                        {...card}\n                        onCardClick={props.onCardClick}\n                        onCardLike={handleCardLike}\n                        onCardDelete={handleCardDelete}/>\n                ))}\n            </section>\n        </main>\n    )\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}