{"ast":null,"code":"var _jsxFileName = \"/Users/RomanDrozdov/Documents/praktikum/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddCardPopup from './AddPlacePopup';\nimport DeleteCardPopup from './DeleteCardPopup';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport Login from './Login';\nimport Register from \"./Register\";\nimport ProtectedRoute from './ProtectedRoute';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getCards()]).then(([userData, cards]) => {\n      setCurrentUser(userData);\n      setCards(cards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard({\n      name: card.name,\n      link: card.link\n    });\n  }\n\n  function handleUpdateUser(user) {\n    api.setUserInfo(user).then(userData => {\n      setCurrentUser(userData);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleUpdateAvatar({\n    avatar\n  }) {\n    api.setUserAvatar(avatar).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleCardLike(props) {\n    const isLiked = props.likes.some(i => i._id === currentUser._id); // Снова проверяем, есть ли уже лайк на этой карточке\n\n    const changeLikeCardStatus = isLiked ? api.deleteLike(props._id) : api.setLike(props._id); //if-else для лайка\n\n    changeLikeCardStatus.then(newCard => {\n      // Отправляем запрос в API и получаем обновлённые данные карточки\n      setCards(state => state.map(c => c._id === props._id ? newCard : c));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleCardDelete(props) {\n    api.deleteCard(props._id).then(() => {\n      setCards(state => state.filter(c => c._id !== props._id)); //с помощью filter делаем копию массива без нашей карточки\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleAddPlaceSubmit(card) {\n    api.setCards(card).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({});\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sing-in\",\n          children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sing-up\",\n          children: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          puth: \"/\",\n          children: [\" \", isLoggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 26\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"sing-in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 52\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/\",\n          isLoggedIn: isLoggedIn,\n          component: Main,\n          onEditAvatar: handleEditAvatarClick,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onCardClick: handleCardClick,\n          cards: cards,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddCardPopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DeleteCardPopup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 14\n  }, this);\n}\n\n_s(App, \"UD5XcsgiZpR26m0TBgU14siIlag=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/RomanDrozdov/Documents/praktikum/react-mesto-auth/src/components/App.js"],"names":["React","Route","Switch","Redirect","Header","Main","Footer","EditAvatarPopup","EditProfilePopup","AddCardPopup","DeleteCardPopup","ImagePopup","api","CurrentUserContext","Login","Register","ProtectedRoute","App","currentUser","setCurrentUser","useState","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","cards","setCards","isLoggedIn","setIsLoggedIn","useEffect","Promise","all","getUserInfo","getCards","then","userData","catch","err","console","log","handleEditProfileClick","handleEditAvatarClick","handleAddPlaceClick","handleCardClick","card","name","link","handleUpdateUser","user","setUserInfo","closeAllPopups","handleUpdateAvatar","avatar","setUserAvatar","data","handleCardLike","props","isLiked","likes","some","i","_id","changeLikeCardStatus","deleteLike","setLike","newCard","state","map","c","handleCardDelete","deleteCard","filter","handleAddPlaceSubmit"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddCardPopup from './AddPlacePopup';\nimport DeleteCardPopup from './DeleteCardPopup';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport Login from './Login';\nimport Register from \"./Register\";\nimport ProtectedRoute from './ProtectedRoute';\n\nfunction App() {\n\n    const [currentUser, setCurrentUser] = React.useState({});\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n\n    const [selectedCard, setSelectedCard] = React.useState({});\n\n    const [cards, setCards] = React.useState([]);\n\n    const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n\n    React.useEffect(() => {\n        Promise.all([\n                api.getUserInfo(),\n                api.getCards(),\n            ])\n            .then(([userData, cards]) => {\n                setCurrentUser(userData);\n                setCards(cards)\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }, [])\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard({ name: card.name, link: card.link });\n    }\n\n    function handleUpdateUser(user) {\n        api.setUserInfo(user)\n            .then((userData) => {\n                setCurrentUser(userData);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    function handleUpdateAvatar({ avatar }) {\n        api.setUserAvatar(avatar)\n            .then((data) => {\n                setCurrentUser(data);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    function handleCardLike(props) {\n        const isLiked = props.likes.some(i => i._id === currentUser._id); // Снова проверяем, есть ли уже лайк на этой карточке\n        const changeLikeCardStatus = isLiked ? api.deleteLike(props._id) : api.setLike(props._id) //if-else для лайка\n        changeLikeCardStatus.then((newCard) => { // Отправляем запрос в API и получаем обновлённые данные карточки\n                setCards((state) => state.map((c) => c._id === props._id ? newCard : c));\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    function handleCardDelete(props) {\n        api.deleteCard(props._id).then(() => {\n                setCards((state) => state.filter((c) => c._id !== props._id)); //с помощью filter делаем копию массива без нашей карточки\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    function handleAddPlaceSubmit(card) {\n        api.setCards(card)\n            .then((newCard) => {\n                setCards([newCard, ...cards]);\n                closeAllPopups()\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    function closeAllPopups() {\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n\n        setSelectedCard({});\n    }\n\n    return ( <\n        CurrentUserContext.Provider value = { currentUser } >\n        <\n        div className = \"page\" >\n\n        <\n        Header / >\n\n        <\n        Switch >\n        <\n        Route path = \"/sing-in\" >\n        <\n        Login / >\n        <\n        /Route>\n\n        <\n        Route path = \"/sing-up\" >\n        <\n        Register / >\n        <\n        /Route>\n\n        <\n        Route puth = \"/\" > {\n            isLoggedIn ? < Redirect to = \"/\" / > : < Redirect to = \"sing-in\" / >\n        } <\n        /Route>\n\n        <\n        ProtectedRoute exact path = \"/\"\n        isLoggedIn = { isLoggedIn }\n        component = { Main }\n        onEditAvatar = { handleEditAvatarClick }\n        onEditProfile = { handleEditProfileClick }\n        onAddPlace = { handleAddPlaceClick }\n        onCardClick = { handleCardClick }\n\n        cards = { cards }\n        onCardLike = { handleCardLike }\n        onCardDelete = { handleCardDelete }\n        /> <\n        /Switch>\n\n        <\n        Footer / >\n\n        <\n        EditProfilePopup isOpen = { isEditProfilePopupOpen }\n        onClose = { closeAllPopups }\n        onUpdateUser = { handleUpdateUser }\n        />\n\n        <\n        AddCardPopup isOpen = { isAddPlacePopupOpen }\n        onClose = { closeAllPopups }\n        onAddPlace = { handleAddPlaceSubmit }\n        />\n\n        <\n        ImagePopup card = { selectedCard }\n        onClose = { closeAllPopups }\n        />\n\n        <\n        DeleteCardPopup / >\n\n        <\n        EditAvatarPopup isOpen = { isEditAvatarPopupOpen }\n        onClose = { closeAllPopups }\n        onUpdateAvatar = { handleUpdateAvatar }\n        />\n\n        <\n        /div> <\n        /CurrentUserContext.Provider>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}