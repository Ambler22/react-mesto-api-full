{"ast":null,"code":"import _toConsumableArray from\"/Users/RomanDrozdov/Documents/praktikum/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/RomanDrozdov/Documents/praktikum/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import Header from'./Header';import Main from'./Main';import Footer from'./Footer';import EditAvatarPopup from'./EditAvatarPopup';import EditProfilePopup from'./EditProfilePopup';import AddCardPopup from'./AddCardPopup';import DeleteCardPopup from'./DeleteCardPopup';import ImagePopup from'./ImagePopup';import{api}from'../utils/Api';import{CurrentUserContext}from'../contexts/CurrentUserContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _React$useState=React.useState(''),_React$useState2=_slicedToArray(_React$useState,2),currentUser=_React$useState2[0],setCurrentUser=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),isEditProfilePopupOpen=_React$useState4[0],setIsEditProfilePopupOpen=_React$useState4[1];var _React$useState5=React.useState(false),_React$useState6=_slicedToArray(_React$useState5,2),isEditAvatarPopupOpen=_React$useState6[0],setIsEditAvatarPopupOpen=_React$useState6[1];var _React$useState7=React.useState(false),_React$useState8=_slicedToArray(_React$useState7,2),isAddPlacePopupOpen=_React$useState8[0],setIsAddPlacePopupOpen=_React$useState8[1];var _React$useState9=React.useState({}),_React$useState10=_slicedToArray(_React$useState9,2),selectedCard=_React$useState10[0],setSelectedCard=_React$useState10[1];var _React$useState11=React.useState([]),_React$useState12=_slicedToArray(_React$useState11,2),cards=_React$useState12[0],setCards=_React$useState12[1];React.useEffect(function(){Promise.all([api.getUserInfo(),api.getCards()]).then(function(_ref){var _ref2=_slicedToArray(_ref,2),userData=_ref2[0],cards=_ref2[1];setCurrentUser(userData);setCards(cards);}).catch(function(err){console.log(err);});},[]);function handleEditProfileClick(){setIsEditProfilePopupOpen(true);}function handleEditAvatarClick(){setIsEditAvatarPopupOpen(true);}function handleAddPlaceClick(){setIsAddPlacePopupOpen(true);}function handleCardClick(card){setSelectedCard({name:card.name,link:card.link});}function handleUpdateUser(user){api.setUserInfo(user).then(function(userData){setCurrentUser(userData);closeAllPopups();}).catch(function(err){console.log(err);});}function handleUpdateAvatar(_ref3){var avatar=_ref3.avatar;api.setUserAvatar(avatar).then(function(data){setCurrentUser(data);closeAllPopups();}).catch(function(err){console.log(err);});}function handleCardLike(props){var isLiked=props.likes.some(function(i){return i._id===currentUser._id;});// Снова проверяем, есть ли уже лайк на этой карточке\nvar changeLikeCardStatus=isLiked?api.deleteLike(props._id):api.setLike(props._id);//if-else для лайка\nchangeLikeCardStatus.then(function(newCard){// Отправляем запрос в API и получаем обновлённые данные карточки\nsetCards(function(state){return state.map(function(c){return c._id===props._id?newCard:c;});});}).catch(function(err){console.log(err);});}function handleCardDelete(props){api.deleteCard(props._id).then(function(){setCards(function(state){return state.filter(function(c){return c._id!==props._id;});});//с помощью filter делаем копию массива без нашей карточки\n}).catch(function(err){console.log(err);});}function handleAddPlaceSubmit(card){api.setCards(card).then(function(newCard){setCards([newCard].concat(_toConsumableArray(cards)));closeAllPopups();}).catch(function(err){console.log(err);});}function closeAllPopups(){setIsEditAvatarPopupOpen(false);setIsEditProfilePopupOpen(false);setIsAddPlacePopupOpen(false);setSelectedCard({});}return/*#__PURE__*/_jsx(CurrentUserContext.Provider,{value:currentUser,children:/*#__PURE__*/_jsxs(\"div\",{className:\"page\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(Main,{onEditAvatar:handleEditAvatarClick,onEditProfile:handleEditProfileClick,onAddPlace:handleAddPlaceClick,onCardClick:handleCardClick,cards:cards,onCardLike:handleCardLike,onCardDelete:handleCardDelete}),/*#__PURE__*/_jsx(Footer,{}),/*#__PURE__*/_jsx(EditProfilePopup,{isOpen:isEditProfilePopupOpen,onClose:closeAllPopups,onUpdateUser:handleUpdateUser}),/*#__PURE__*/_jsx(AddCardPopup,{isOpen:isAddPlacePopupOpen,onClose:closeAllPopups,onAddPlace:handleAddPlaceSubmit}),/*#__PURE__*/_jsx(ImagePopup,{card:selectedCard,onClose:closeAllPopups}),/*#__PURE__*/_jsx(DeleteCardPopup,{}),/*#__PURE__*/_jsx(EditAvatarPopup,{isOpen:isEditAvatarPopupOpen,onClose:closeAllPopups,onUpdateAvatar:handleUpdateAvatar})]})});}export default App;","map":{"version":3,"sources":["/Users/RomanDrozdov/Documents/praktikum/mesto-react/src/components/App.js"],"names":["React","Header","Main","Footer","EditAvatarPopup","EditProfilePopup","AddCardPopup","DeleteCardPopup","ImagePopup","api","CurrentUserContext","App","useState","currentUser","setCurrentUser","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","cards","setCards","useEffect","Promise","all","getUserInfo","getCards","then","userData","catch","err","console","log","handleEditProfileClick","handleEditAvatarClick","handleAddPlaceClick","handleCardClick","card","name","link","handleUpdateUser","user","setUserInfo","closeAllPopups","handleUpdateAvatar","avatar","setUserAvatar","data","handleCardLike","props","isLiked","likes","some","i","_id","changeLikeCardStatus","deleteLike","setLike","newCard","state","map","c","handleCardDelete","deleteCard","filter","handleAddPlaceSubmit"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddCardPopup from './AddCardPopup';\nimport DeleteCardPopup from './DeleteCardPopup';\nimport ImagePopup from './ImagePopup';\nimport { api } from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction App() {\n\n    const [currentUser, setCurrentUser] = React.useState('');\n\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n\n    const [selectedCard, setSelectedCard] = React.useState({});\n\n    const [cards, setCards] = React.useState([]);\n\n    React.useEffect(() => {\n        Promise.all([\n            api.getUserInfo(),\n            api.getCards(),\n        ])\n            .then(([userData, cards]) => {\n                setCurrentUser(userData);\n                setCards(cards)\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }, [])\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard({ name: card.name, link: card.link });\n    }\n\n    function handleUpdateUser(user) {\n        api.setUserInfo(user)\n            .then((userData) => {\n                setCurrentUser(userData);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    function handleUpdateAvatar({ avatar }) {\n        api.setUserAvatar(avatar)\n            .then((data) => {\n                setCurrentUser(data);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    function handleCardLike(props) {\n        const isLiked = props.likes.some(i => i._id === currentUser._id); // Снова проверяем, есть ли уже лайк на этой карточке\n        const changeLikeCardStatus = isLiked ? api.deleteLike(props._id) : api.setLike(props._id) //if-else для лайка\n        changeLikeCardStatus.then((newCard) => { // Отправляем запрос в API и получаем обновлённые данные карточки\n            setCards((state) => state.map((c) => c._id === props._id ? newCard : c));\n        })\n        .catch((err) => {\n            console.log(err);\n        })\n    }\n\n    function handleCardDelete(props) {\n        api.deleteCard(props._id).then(() => {\n            setCards((state) => state.filter((c) => c._id !== props._id)); //с помощью filter делаем копию массива без нашей карточки\n        })\n        .catch((err) => {\n            console.log(err);\n        })\n    }\n\n    function handleAddPlaceSubmit(card) {\n        api.setCards(card)\n            .then((newCard) => {\n                setCards([newCard, ...cards]);\n                closeAllPopups()\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    function closeAllPopups() {\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n\n        setSelectedCard({});\n    }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"page\">\n\n                <Header />\n\n                <Main\n                    onEditAvatar={handleEditAvatarClick}\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    onCardClick={handleCardClick}\n\n                    cards={cards}\n                    onCardLike={handleCardLike}\n                    onCardDelete={handleCardDelete}\n                />\n\n                <Footer />\n\n                <EditProfilePopup\n                    isOpen={isEditProfilePopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateUser={handleUpdateUser}\n                />\n\n                <AddCardPopup\n                    isOpen={isAddPlacePopupOpen}\n                    onClose={closeAllPopups}\n                    onAddPlace={handleAddPlaceSubmit}\n                />\n\n                <ImagePopup\n                    card={selectedCard}\n                    onClose={closeAllPopups}\n                />\n\n                <DeleteCardPopup />\n\n                <EditAvatarPopup\n                    isOpen={isEditAvatarPopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateAvatar={handleUpdateAvatar}\n                />\n\n            </div>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}