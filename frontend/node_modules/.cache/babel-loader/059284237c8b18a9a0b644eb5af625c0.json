{"ast":null,"code":"var _jsxFileName = \"/Users/RomanDrozdov/Documents/praktikum/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddCardPopup from './AddCardPopup';\nimport DeleteCardPopup from './DeleteCardPopup';\nimport ImagePopup from './ImagePopup';\nimport { api } from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentUser, setCurrentUser] = React.useState('');\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    api.getCards().then(cards => {\n      console.log(cards);\n      setCards(cards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  React.useEffect(() => {\n    api.getUserInfo().then(userData => {\n      setCurrentUser(userData);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard({\n      name: card.name,\n      link: card.link\n    });\n  }\n\n  function handleUpdateUser(props) {\n    api.setUserInfo(props).then(() => {\n      setCurrentUser(props); //setIsEditProfilePopupOpen(false);\n\n      closeAllPopups();\n    });\n  }\n\n  function handleUpdateAvatar(avatar) {\n    api.setUserAvatar(avatar).then(() => {\n      setCurrentUser(avatar);\n      setIsEditAvatarPopupOpen(false);\n    });\n  }\n\n  function handleCardLike(props) {\n    const isLiked = props.likes.some(i => i._id === currentUser._id); // Снова проверяем, есть ли уже лайк на этой карточке\n\n    const changeLikeCardStatus = isLiked ? api.deleteLike(props._id) : api.setLike(props._id); //if-else для лайка\n\n    changeLikeCardStatus.then(newCard => {\n      // Отправляем запрос в API и получаем обновлённые данные карточки\n      setCards(state => state.map(c => c._id === props._id ? newCard : c));\n    }); //добавить catch\n  }\n\n  function handleCardDelete(props) {\n    api.deleteCard(props._id).then(() => {\n      setCards(state => state.filter(c => c._id !== props._id)); //с помощью filter делаем копию массива без нашей карточки\n    });\n  }\n\n  function handleAddPlaceSubmit(card) {\n    api.setCards(card.name, card.link).then(newCard => {\n      setCards([newCard, ...cards]);\n      setIsAddPlacePopupOpen(false);\n    });\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({});\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditAvatar: handleEditAvatarClick,\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onCardClick: handleCardClick,\n        cards: cards,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddCardPopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DeleteCardPopup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"FwN8tDZBpjPaTSMeC6EZh/w8NH4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/RomanDrozdov/Documents/praktikum/mesto-react/src/components/App.js"],"names":["React","Header","Main","Footer","EditAvatarPopup","EditProfilePopup","AddCardPopup","DeleteCardPopup","ImagePopup","api","CurrentUserContext","App","currentUser","setCurrentUser","useState","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","cards","setCards","useEffect","getCards","then","console","log","catch","err","getUserInfo","userData","handleEditProfileClick","handleEditAvatarClick","handleAddPlaceClick","handleCardClick","card","name","link","handleUpdateUser","props","setUserInfo","closeAllPopups","handleUpdateAvatar","avatar","setUserAvatar","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","deleteLike","setLike","newCard","state","map","c","handleCardDelete","deleteCard","filter","handleAddPlaceSubmit"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddCardPopup from './AddCardPopup';\nimport DeleteCardPopup from './DeleteCardPopup';\nimport ImagePopup from './ImagePopup';\nimport { api } from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction App() {\n\n    const [currentUser, setCurrentUser] = React.useState('');\n\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n\n    const [selectedCard, setSelectedCard] = React.useState({});\n\n    const [cards, setCards] = React.useState([]);\n\n    React.useEffect(() => {\n        api.getCards()\n            .then((cards) => {\n                console.log(cards)\n                setCards(cards)\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }, []);\n\n    React.useEffect(() => {\n        api.getUserInfo()\n            .then((userData) => {\n                setCurrentUser(userData);\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }, [])\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard({ name: card.name, link: card.link });\n    }\n\n    function handleUpdateUser(props) {\n        api.setUserInfo(props)\n        .then(() => {\n            setCurrentUser(props);\n            //setIsEditProfilePopupOpen(false);\n            closeAllPopups();\n        })\n    }\n\n    function handleUpdateAvatar(avatar) {\n        api.setUserAvatar(avatar)\n        .then(() => {\n            setCurrentUser(avatar);\n            setIsEditAvatarPopupOpen(false);\n        })\n    }\n\n    function handleCardLike(props) {\n        const isLiked = props.likes.some(i => i._id === currentUser._id); // Снова проверяем, есть ли уже лайк на этой карточке\n        const changeLikeCardStatus = isLiked ? api.deleteLike(props._id) : api.setLike(props._id) //if-else для лайка\n        changeLikeCardStatus.then((newCard) => { // Отправляем запрос в API и получаем обновлённые данные карточки\n            setCards((state) => state.map((c) => c._id === props._id ? newCard : c));\n        }) //добавить catch\n    }\n\n    function handleCardDelete(props) {\n        api.deleteCard(props._id).then(() => {\n            setCards((state) => state.filter((c) => c._id !== props._id)); //с помощью filter делаем копию массива без нашей карточки\n        });\n    }\n\n    function handleAddPlaceSubmit(card) {\n        api.setCards(card.name, card.link)\n        .then((newCard) => {\n            setCards([newCard, ...cards]);\n            setIsAddPlacePopupOpen(false);\n        })\n    }\n\n    function closeAllPopups() {\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n\n        setSelectedCard({});\n    }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"page\">\n\n                <Header />\n\n                <Main\n                    onEditAvatar={handleEditAvatarClick}\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    onCardClick={handleCardClick}\n\n                    cards={cards}\n                    onCardLike={handleCardLike}\n                    onCardDelete={handleCardDelete}\n                />\n\n                <Footer />\n\n                <EditProfilePopup\n                    isOpen={isEditProfilePopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateUser={handleUpdateUser}\n                />\n\n                <AddCardPopup\n                    isOpen={isAddPlacePopupOpen}\n                    onClose={closeAllPopups}\n                    onAddPlace={handleAddPlaceSubmit}\n                />\n\n                <ImagePopup\n                    card={selectedCard}\n                    onClose={closeAllPopups}\n                />\n\n                <DeleteCardPopup />\n\n                <EditAvatarPopup\n                    isOpen={isEditAvatarPopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateAvatar={handleUpdateAvatar}\n                />\n\n            </div>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}